# available commands: https://nikitabobko.github.io/AeroSpace/commands
# normalizations: https://nikitabobko.github.io/AeroSpace/guide#normalization
# layouts: https://nikitabobko.github.io/AeroSpace/guide#layouts
# keyboard layouts: https://nikitabobko.github.io/AeroSpace/guide#key-mapping
# binding modes: https://nikitabobko.github.io/AeroSpace/guide#binding-modes

after-login-command = ['layout v_accordion']

after-startup-command = []

start-at-login = true

enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 30

default-root-container-layout = 'accordion'  # possible values: tiles|accordion

# possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'


key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical   = 10
outer.left       = 10
outer.bottom     = 10
outer.top        = 10
outer.right      = 10

# 'main' binding mode declaration

# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
cmd-shift-enter = 'exec-and-forget open -n /Applications/kitty.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-shift-slash = 'layout tiles horizontal vertical'
cmd-shift-comma = 'layout accordion vertical horizontal'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-shift-h = ['focus --boundaries-action stop left' , 'move-mouse window-force-center']
cmd-shift-j = ['focus --boundaries-action stop down' , 'move-mouse window-force-center']
cmd-shift-k = ['focus --boundaries-action stop up'   , 'move-mouse window-force-center']
cmd-shift-l = ['focus --boundaries-action stop right', 'move-mouse window-force-center']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-h = 'move left'
cmd-ctrl-j = 'move down'
cmd-ctrl-k = 'move up'
cmd-ctrl-l = 'move right'

# callbacks
[[on-window-detected]]
if.app-id = 'com.electron.asana'
run = 'move-node-to-workspace asana'

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = 'move-node-to-workspace browser'

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = 'move-node-to-workspace cal'

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = 'move-node-to-workspace cal'

# google drive
com.brave.Browser.app.aghbiahbpaijignceidepookljebhfak

com.apple.finder                     | Finder

86947 | com.microsoft.VSCode                 | Code
2204  | com.apple.systempreferences          | System Settings
4164  | com.openai.chat                      | ChatGPT
5276  | org.pqrs.Karabiner-Elements.Settings | Karabiner-Elements
8630  | net.kovidgoyal.kitty                 | kitty
36203 | com.apple.MobileSMS                  | Messages

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-shift-minus = 'resize smart -64'
cmd-shift-equal = 'resize smart +64'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-alt-j = 'workspace next'
cmd-alt-k = 'workspace prev'

# todo:
# convert the first action to an application specific trigger callbacks
# get application ids by running `$ aerospace list-apps`
alt-a = ['workspace asana']
alt-b = [ 'move-node-to-workspace browser'    , 'workspace browser'   ]
alt-c = [ 'move-node-to-workspace cal'        , 'workspace cal'       ]
alt-d = [ 'move-node-to-workspace drive'      , 'workspace drive'     ]
alt-e = [ 'move-node-to-workspace email'      , 'workspace email'     ]
alt-f = [ 'move-node-to-workspace finder'     , 'workspace finder'    ]
alt-g = [ 'move-node-to-workspace github'     , 'workspace github'    ]
alt-i = [ 'move-node-to-workspace imessage'   , 'workspace imessage'  ]
alt-k = [ 'move-node-to-workspace kitty'      , 'workspace kitty'     ]
alt-m = [ 'move-node-to-workspace music'      , 'workspace music'     ]
alt-n = [ 'move-node-to-workspace neovim'     , 'workspace neovim'    ]
alt-o = [ 'move-node-to-workspace obsidian'   , 'workspace obsidian'  ]
alt-p = [ 'move-node-to-workspace gimp'       , 'workspace gimp'      ]
alt-r = [ 'move-node-to-workspace rstudio'    , 'workspace rstudio'   ]
alt-s = [ 'move-node-to-workspace slack'      , 'workspace slack'     ]
alt-t = [ 'move-node-to-workspace chatgpt'    , 'workspace chatgpt'   ]
alt-v = [ 'move-node-to-workspace vscode'     , 'workspace vscode'    ]
alt-z = [ 'move-node-to-workspace zoom'       , 'workspace zoom'      ]
alt-1 = [ 'move-node-to-workspace sandbox-1'  , 'workspace sandbox-1' ]
alt-2 = [ 'move-node-to-workspace sandbox-2'  , 'workspace sandbox-2' ]
alt-3 = [ 'move-node-to-workspace sandbox-3'  , 'workspace sandbox-3' ]

cmd-shift-f = ['fullscreen']  # toggle between fullscreen

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-semicolon = 'move-workspace-to-monitor --wrap-around next'
cmd-alt-n = ['focus-monitor next --wrap-around', 'move-mouse window-force-center']
cmd-alt-m = ['move-workspace-to-monitor next --wrap-around', 'move-mouse window-force-center']

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']  # reset layout
f = ['layout floating tiling', 'mode main']  # toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

## todo: add application specific callbacks (triggers + ignores)